version: '3.8'

services:
  # Zookeeper for Kafka coordination
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper-1
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - flink-network

  # Kafka for event streaming
  kafka:
    image: bitnami/kafka:3.4
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-1:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
    networks:
      - flink-network

  # Kafka initialization
  kafka-setup:
    image: bitnami/kafka:3.4
    container_name: kafka-setup
    depends_on:
      - kafka
    command: >
      bash -c "
        echo 'Waiting for Kafka to be ready...' &&
        sleep 20 &&
        kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --replication-factor 1 --partitions 4 --topic ad-impressions &&
        kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --replication-factor 1 --partitions 4 --topic ad-clicks &&
        echo 'Kafka topics created.'
      "
    networks:
      - flink-network

  # Data Generator
  data-generator:
    build:
      context: ./data-generator
      dockerfile: Dockerfile
    container_name: data-generator
    depends_on:
      - kafka-setup
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9092
      - IMPRESSION_TOPIC=ad-impressions
      - CLICK_TOPIC=ad-clicks
      - EVENT_RATE=50  # Events per second
      - CLICK_RATIO=0.1  # 10% of impressions get clicks
    command: >
      bash -c "
        echo 'Waiting before starting generator...' &&
        sleep 20 &&
        python generate_events.py
      "
    networks:
      - flink-network

  # Flink
  flink-jobmanager:
    build:
      context: ./flink
      dockerfile: Dockerfile
    container_name: flink-jobmanager
    depends_on:
      - postgres
    command: jobmanager
    ports:
      - "8081:8081"  # Flink web UI
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    networks:
      - flink-network
  
  flink-taskmanager:
    build:
      context: ./flink
      dockerfile: Dockerfile
    container_name: flink-taskmanager
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
      - TASK_MANAGER_NUMBER_OF_TASK_SLOTS=2  
    networks:
      - flink-network

  # Postgres DB
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: superset
      POSTGRES_PASSWORD: superset
      POSTGRES_DB: ad_analytics

    volumes:
      - ./dashboard/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - flink-network
  
  # Dashboard in superset
  superset:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: superset
    ports:
      - "8088:8088"
    environment:
      - SUPERSET_LOAD_EXAMPLES=no
      - SUPERSET_SECRET_KEY=mysecretkey
      - DATABASE_URL=postgresql+psycopg2://superset:superset@postgres:5432/ad_analytics
    depends_on:
      - postgres
    volumes:
      - ./dashboard/superset_init.sh:/app/superset_init.sh
    command: ["/bin/bash", "/app/superset_init.sh"]
    networks:
      - flink-network


networks:
  flink-network:
    driver: bridge